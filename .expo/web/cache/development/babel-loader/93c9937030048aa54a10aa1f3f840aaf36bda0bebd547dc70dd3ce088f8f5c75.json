{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { styles } from \"../styles/styles\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DrawingItem from \"../components/DrawingItem\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ElementType = function (ElementType) {\n  ElementType[\"GRIPPER\"] = \"Gripper\";\n  ElementType[\"LINE_EQUIPMENT\"] = \"Line Equipment\";\n  ElementType[\"FITTINGS_N_TUBES\"] = \"Fittings and Tubes\";\n  ElementType[\"FLOW_CONTROL_EQUIPMENT\"] = \"Flow Control Equipment\";\n  ElementType[\"MECHANICAL_N_AIR_OPERATED_VALVES\"] = \"Mechanical and Air Operated Valves\";\n  ElementType[\"PNEUMATIC_ACTUATORS\"] = \"Pneumatic Actuators\";\n  ElementType[\"PRESSURE_N_VACUUM_SWITCHES\"] = \"Pressure and Vacuum Switches\";\n  ElementType[\"PROCESS_TECHNOLOGY\"] = \"Process Technology\";\n  ElementType[\"ROTARY_ACTUATOR\"] = \"Rotary actuator\";\n  ElementType[\"SAFETY_PRESSURE_RELEASE_VALVES\"] = \"Safety pressure release valves\";\n  ElementType[\"SOLENOID_VALVES\"] = \"Solenoid Valves\";\n  ElementType[\"VACUUM_EQUIPMENT\"] = \"Vacuum Equipment\";\n  ElementType[\"OTHER\"] = \"Other\";\n  return ElementType;\n}(ElementType || {});\nfunction DocumentationScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    term = _useState4[0],\n    setTerm = _useState4[1];\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  useEffect(function () {\n    fetch(`http://127.0.0.1:5000/?term=${term}`).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setData(data);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    console.log(data);\n  }, [term]);\n  return _jsxs(SafeAreaView, {\n    style: styles.app,\n    children: [_jsx(TextInput, {\n      style: styles.search,\n      onChangeText: setTerm,\n      value: term,\n      placeholder: t(\"search\") + \"...\"\n    }), _jsx(FlatList, {\n      style: {\n        display: \"flex\",\n        flex: 1\n      },\n      data: data,\n      keyExtractor: function keyExtractor(_, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(DrawingItem, {\n          item: item\n        });\n      }\n    })]\n  });\n}\nexport default DocumentationScreen;","map":{"version":3,"names":["React","useEffect","useState","styles","FlatList","SafeAreaView","TextInput","DrawingItem","useTranslation","jsx","_jsx","jsxs","_jsxs","ElementType","DocumentationScreen","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","term","setTerm","_useTranslation","t","fetch","then","response","json","catch","error","console","log","style","app","children","search","onChangeText","value","placeholder","display","flex","keyExtractor","_","index","toString","renderItem","_ref","item"],"sources":["/home/yurii/VSProjects/bakalarka/BCv2/bc-frontend/src/screens/DocumentaionScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styles } from \"../styles/styles\";\nimport { FlatList, SafeAreaView, TextInput } from \"react-native\";\nimport DrawingItem from \"../components/DrawingItem\";\nimport { useTranslation } from \"react-i18next\";\n\nenum ElementType {\n  GRIPPER = \"Gripper\",\n  LINE_EQUIPMENT = \"Line Equipment\",\n  FITTINGS_N_TUBES = \"Fittings and Tubes\",\n  FLOW_CONTROL_EQUIPMENT = \"Flow Control Equipment\",\n  MECHANICAL_N_AIR_OPERATED_VALVES = \"Mechanical and Air Operated Valves\",\n  PNEUMATIC_ACTUATORS = \"Pneumatic Actuators\",\n  PRESSURE_N_VACUUM_SWITCHES = \"Pressure and Vacuum Switches\",\n  PROCESS_TECHNOLOGY = \"Process Technology\",\n  ROTARY_ACTUATOR = \"Rotary actuator\",\n  SAFETY_PRESSURE_RELEASE_VALVES = \"Safety pressure release valves\",\n  SOLENOID_VALVES = \"Solenoid Valves\",\n  VACUUM_EQUIPMENT = \"Vacuum Equipment\",\n  OTHER = \"Other\",\n}\n\ntype Drawing = {\n  id: string;\n  name_en: string;\n  name_sk: string;\n  name_ua: string;\n  image: string;\n  type: ElementType;\n  description_en: string;\n  description_sk: string;\n  description_ua: string;\n};\n\nfunction DocumentationScreen() {\n  const [data, setData] = useState<Drawing[]>([]);\n  const [term, setTerm] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    fetch(`http://127.0.0.1:5000/?term=${term}`)\n      .then((response) => response.json())\n      .then((data) => setData(data))\n      .catch((error) => console.error(error));\n    console.log(data);\n  }, [term]);\n\n  return (\n    <SafeAreaView style={styles.app}>\n      <TextInput\n        style={styles.search}\n        onChangeText={setTerm}\n        value={term}\n        placeholder={t(\"search\") + \"...\"}\n      />\n      <FlatList\n        style={{ display: \"flex\", flex: 1 /*backgroundColor: \"gray\"*/ }}\n        data={data}\n        keyExtractor={(_, index) => index.toString()}\n        renderItem={({ item }) => <DrawingItem item={item} />}\n      />\n    </SafeAreaView>\n  );\n}\n\nexport default DocumentationScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM;AAA2B,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAE1C,OAAOC,WAAW;AAClB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,IAE1CC,WAAW,aAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA,EAAXA,WAAW;AA4BhB,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,IAAAC,SAAA,GAAwBb,QAAQ,CAAY,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAwBlB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,eAAA,GAAchB,cAAc,CAAC,CAAC;IAAtBiB,CAAC,GAAAD,eAAA,CAADC,CAAC;EAETxB,SAAS,CAAC,YAAM;IACdyB,KAAK,CAAE,+BAA8BJ,IAAK,EAAC,CAAC,CACzCK,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACT,IAAI;MAAA,OAAKC,OAAO,CAACD,IAAI,CAAC;IAAA,EAAC,CAC7BY,KAAK,CAAC,UAACC,KAAK;MAAA,OAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAAA,EAAC;IACzCC,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;EACnB,CAAC,EAAE,CAACI,IAAI,CAAC,CAAC;EAEV,OACEV,KAAA,CAACP,YAAY;IAAC6B,KAAK,EAAE/B,MAAM,CAACgC,GAAI;IAAAC,QAAA,GAC9B1B,IAAA,CAACJ,SAAS;MACR4B,KAAK,EAAE/B,MAAM,CAACkC,MAAO;MACrBC,YAAY,EAAEf,OAAQ;MACtBgB,KAAK,EAAEjB,IAAK;MACZkB,WAAW,EAAEf,CAAC,CAAC,QAAQ,CAAC,GAAG;IAAM,CAClC,CAAC,EACFf,IAAA,CAACN,QAAQ;MACP8B,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,IAAI,EAAE;MAA8B,CAAE;MAChExB,IAAI,EAAEA,IAAK;MACXyB,YAAY,EAAE,SAAAA,aAACC,CAAC,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC7CC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OAAOvC,IAAA,CAACH,WAAW;UAAC0C,IAAI,EAAEA;QAAK,CAAE,CAAC;MAAA;IAAC,CACvD,CAAC;EAAA,CACU,CAAC;AAEnB;AAEA,eAAenC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}