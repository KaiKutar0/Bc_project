{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { styles } from \"../styles/styles\";\nimport LanguagePicker from \"../components/LanguagePicker\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar options = [\"ENG\", \"SK\", \"UA\"];\nvar _useTranslation = useTranslation(),\n  t = _useTranslation.t,\n  _useTranslation$i18n = _useTranslation.i18n,\n  changeLanguage = _useTranslation$i18n.changeLanguage,\n  language = _useTranslation$i18n.language;\nvar _useState = useState(language),\n  _useState2 = _slicedToArray(_useState, 2),\n  currentLanguage = _useState2[0],\n  setCurrentLanguage = _useState2[1];\nvar handleChangeLanguage = function handleChangeLanguage() {\n  var newLanguage = currentLanguage === \"en\" ? \"sk\" : \"en\";\n  setCurrentLanguage(newLanguage);\n  changeLanguage(newLanguage);\n};\nfunction SettingsScreen() {\n  var _useState3 = useState(\"en\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lang = _useState4[0],\n    useLang = _useState4[1];\n  return _jsx(SafeAreaView, {\n    style: styles.app,\n    children: _jsx(LanguagePicker, {\n      foo: function foo() {}\n    })\n  });\n}\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","SafeAreaView","styles","LanguagePicker","useTranslation","jsx","_jsx","options","_useTranslation","t","_useTranslation$i18n","i18n","changeLanguage","language","_useState","_useState2","_slicedToArray","currentLanguage","setCurrentLanguage","handleChangeLanguage","newLanguage","SettingsScreen","_useState3","_useState4","lang","useLang","style","app","children","foo"],"sources":["/home/yurii/VSProjects/bakalarka/BCv2/bc-frontend/src/screens/SettingsScreen.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SafeAreaView, View, Text } from \"react-native\";\nimport { styles } from \"../styles/styles\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport LanguagePicker from \"../components/LanguagePicker\";\nimport { useTranslation } from \"react-i18next\";\n\nconst options = [\"ENG\", \"SK\", \"UA\"];\n\nconst {\n  t,\n  i18n: { changeLanguage, language },\n} = useTranslation();\nconst [currentLanguage, setCurrentLanguage] = useState(language);\n\nconst handleChangeLanguage = () => {\n  const newLanguage = currentLanguage === \"en\" ? \"sk\" : \"en\";\n  setCurrentLanguage(newLanguage);\n  changeLanguage(newLanguage);\n};\n\nfunction SettingsScreen() {\n  const [lang, useLang] = useState(\"en\");\n  return (\n    <SafeAreaView style={styles.app}>\n      <LanguagePicker foo={() => {}} />\n    </SafeAreaView>\n  );\n}\n\nexport default SettingsScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,YAAA;AAExC,SAASC,MAAM;AAEf,OAAOC,cAAc;AACrB,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE/C,IAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;AAEnC,IAAAC,eAAA,GAGIJ,cAAc,CAAC,CAAC;EAFlBK,CAAC,GAAAD,eAAA,CAADC,CAAC;EAAAC,oBAAA,GAAAF,eAAA,CACDG,IAAI;EAAIC,cAAc,GAAAF,oBAAA,CAAdE,cAAc;EAAEC,QAAQ,GAAAH,oBAAA,CAARG,QAAQ;AAElC,IAAAC,SAAA,GAA8Cd,QAAQ,CAACa,QAAQ,CAAC;EAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;EAAzDG,eAAe,GAAAF,UAAA;EAAEG,kBAAkB,GAAAH,UAAA;AAE1C,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;EACjC,IAAMC,WAAW,GAAGH,eAAe,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;EAC1DC,kBAAkB,CAACE,WAAW,CAAC;EAC/BR,cAAc,CAACQ,WAAW,CAAC;AAC7B,CAAC;AAED,SAASC,cAAcA,CAAA,EAAG;EACxB,IAAAC,UAAA,GAAwBtB,QAAQ,CAAC,IAAI,CAAC;IAAAuB,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,OACEjB,IAAA,CAACL,YAAY;IAACyB,KAAK,EAAExB,MAAM,CAACyB,GAAI;IAAAC,QAAA,EAC9BtB,IAAA,CAACH,cAAc;MAAC0B,GAAG,EAAE,SAAAA,IAAA,EAAM,CAAC;IAAE,CAAE;EAAC,CACrB,CAAC;AAEnB;AAEA,eAAeR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}