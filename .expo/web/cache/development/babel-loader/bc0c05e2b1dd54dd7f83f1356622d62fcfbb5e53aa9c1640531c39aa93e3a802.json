{"ast":null,"code":"import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport CameraScreen from \"./src/screens/CameraScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport DocumentationScreen from \"./src/screens/DocumentaionScreen\";\nimport \"./src/i18n.ts\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"LandingScreen\",\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === \"LandingScreen\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (route.name === \"SettingsScreen\") {\n              iconName = focused ? \"settings\" : \"settings-outline\";\n            } else if (route.name === \"CameraScreen\") {\n              iconName = focused ? \"camera\" : \"camera-outline\";\n            } else if (route.name === \"DocumentationScreen\") {\n              iconName = focused ? \"document-text\" : \"document-text-outline\";\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"blue\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"DocumentationScreen\",\n        component: DocumentationScreen,\n        options: {\n          title: t(\"documentationTitle\")\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"SettingsScreen\",\n        component: SettingsScreen,\n        options: {\n          title: t(\"settingsTitle\")\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"CameraScreen\",\n        component: CameraScreen,\n        options: {\n          title: \"Camera\"\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","CameraScreen","SettingsScreen","Ionicons","DocumentationScreen","useTranslation","jsx","_jsx","jsxs","_jsxs","App","Tab","_useTranslation","t","children","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","component","options","title"],"sources":["/home/yurii/VSProjects/bakalarka/BCv2/bc-frontend/App.tsx"],"sourcesContent":["import React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport CameraScreen from \"./src/screens/CameraScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport DocumentationScreen from \"./src/screens/DocumentaionScreen\";\nimport \"./src/i18n.ts\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function App() {\n  const Tab = createBottomTabNavigator();\n\n  const { t } = useTranslation();\n\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        initialRouteName=\"LandingScreen\"\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === \"LandingScreen\") {\n              iconName = focused ? \"home\" : \"home-outline\";\n            } else if (route.name === \"SettingsScreen\") {\n              iconName = focused ? \"settings\" : \"settings-outline\";\n            } else if (route.name === \"CameraScreen\") {\n              iconName = focused ? \"camera\" : \"camera-outline\";\n            } else if (route.name === \"DocumentationScreen\") {\n              iconName = focused ? \"document-text\" : \"document-text-outline\";\n            }\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"blue\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n        <Tab.Screen\n          name=\"DocumentationScreen\"\n          component={DocumentationScreen}\n          options={{\n            title: t(\"documentationTitle\"),\n            // headerTintColor: \"white\",\n            // headerStyle: { backgroundColor: \"cyan\" },\n          }}\n        />\n        <Tab.Screen\n          name=\"SettingsScreen\"\n          component={SettingsScreen}\n          options={{ title: t(\"settingsTitle\") }}\n        />\n\n        {/* <Tab.Screen\n          name=\"LandingScreen\"\n          component={LandingScreen}\n          options={{ title: \"Home\" }}\n        /> */}\n        <Tab.Screen\n          name=\"CameraScreen\"\n          component={CameraScreen}\n          options={{ title: \"Camera\" }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,YAAY;AACnB,OAAOC,cAAc;AACrB,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,mBAAmB;AAC1B;AACA,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAMC,GAAG,GAAGX,wBAAwB,CAAC,CAAC;EAEtC,IAAAY,eAAA,GAAcP,cAAc,CAAC,CAAC;IAAtBQ,CAAC,GAAAD,eAAA,CAADC,CAAC;EAET,OACEN,IAAA,CAACR,mBAAmB;IAAAe,QAAA,EAClBL,KAAA,CAACE,GAAG,CAACI,SAAS;MACZC,gBAAgB,EAAC,eAAe;MAChCC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA8B;YAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;cAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;YACjC,IAAIC,QAAQ;YAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,eAAe,EAAE;cAClCD,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;YAC9C,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,gBAAgB,EAAE;cAC1CD,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;YACtD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,cAAc,EAAE;cACxCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;YAClD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,qBAAqB,EAAE;cAC/CD,QAAQ,GAAGH,OAAO,GAAG,eAAe,GAAG,uBAAuB;YAChE;YACA,OAAOf,IAAA,CAACJ,QAAQ;cAACuB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC/D,CAAC;UACDI,qBAAqB,EAAE,MAAM;UAC7BC,uBAAuB,EAAE;QAC3B,CAAC;MAAA,CAAE;MAAAd,QAAA,GAEHP,IAAA,CAACI,GAAG,CAACkB,MAAM;QACTH,IAAI,EAAC,qBAAqB;QAC1BI,SAAS,EAAE1B,mBAAoB;QAC/B2B,OAAO,EAAE;UACPC,KAAK,EAAEnB,CAAC,CAAC,oBAAoB;QAG/B;MAAE,CACH,CAAC,EACFN,IAAA,CAACI,GAAG,CAACkB,MAAM;QACTH,IAAI,EAAC,gBAAgB;QACrBI,SAAS,EAAE5B,cAAe;QAC1B6B,OAAO,EAAE;UAAEC,KAAK,EAAEnB,CAAC,CAAC,eAAe;QAAE;MAAE,CACxC,CAAC,EAOFN,IAAA,CAACI,GAAG,CAACkB,MAAM;QACTH,IAAI,EAAC,cAAc;QACnBI,SAAS,EAAE7B,YAAa;QACxB8B,OAAO,EAAE;UAAEC,KAAK,EAAE;QAAS;MAAE,CAC9B,CAAC;IAAA,CACW;EAAC,CACG,CAAC;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}