{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport { styles } from \"../styles/styles\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport DrawingItem from \"../components/DrawingItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DocumentationScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    term = _useState4[0],\n    setTerm = _useState4[1];\n  useEffect(function () {\n    fetch(\"http://127.0.0.1:5000/drawing\", {\n      method: \"GET\"\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setData(data.drawings);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n    console.log(data);\n  }, []);\n  return _jsxs(SafeAreaView, {\n    style: styles.app,\n    children: [_jsx(TextInput, {\n      style: styles.search,\n      onChangeText: setTerm,\n      value: term,\n      placeholder: \"Search...\"\n    }), _jsx(FlatList, {\n      style: {\n        display: \"flex\",\n        flex: 1\n      },\n      data: term === \"\" ? data : data.filter(function (i) {\n        return i[1].includes(term.toLowerCase());\n      }),\n      keyExtractor: function keyExtractor(_, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(DrawingItem, {\n          item: {\n            id: item[0],\n            name: item[1],\n            image: item[2]\n          }\n        });\n      }\n    })]\n  });\n}\nexport default DocumentationScreen;","map":{"version":3,"names":["React","useEffect","useState","styles","FlatList","SafeAreaView","TextInput","DrawingItem","jsx","_jsx","jsxs","_jsxs","DocumentationScreen","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","term","setTerm","fetch","method","then","response","json","drawings","catch","error","console","log","style","app","children","search","onChangeText","value","placeholder","display","flex","filter","i","includes","toLowerCase","keyExtractor","_","index","toString","renderItem","_ref","item","id","name","image"],"sources":["/home/yurii/VSProjects/bakalarka/BCv2/bc-frontend/src/screens/DocumentaionScreen.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styles } from \"../styles/styles\";\nimport { FlatList, SafeAreaView, TextInput } from \"react-native\";\nimport DrawingItem from \"../components/DrawingItem\";\n\ntype Drawing = {\n  id: string;\n  name: string;\n  image: string;\n};\n\nfunction DocumentationScreen() {\n  const [data, setData] = useState<Drawing[]>([]);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/drawing\", { method: \"GET\" })\n      .then((response) => response.json())\n      .then((data) => setData(data.drawings))\n      .catch((error) => console.error(error));\n    console.log(data);\n  }, []);\n\n  return (\n    <SafeAreaView style={styles.app}>\n      <TextInput\n        style={styles.search}\n        onChangeText={setTerm}\n        value={term}\n        placeholder=\"Search...\"\n      />\n      <FlatList\n        style={{ display: \"flex\", flex: 1 /*backgroundColor: \"gray\"*/ }}\n        data={\n          term === \"\"\n            ? data\n            : data.filter((i) => i[1].includes(term.toLowerCase()))\n        }\n        keyExtractor={(_, index) => index.toString()}\n        renderItem={({ item }) => (\n          <DrawingItem\n            item={{\n              id: item[0],\n              name: item[1],\n              image: item[2],\n            }}\n          />\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n\nexport default DocumentationScreen;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM;AAA2B,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAE1C,OAAOC,WAAW;AAAkC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAQpD,SAASC,mBAAmBA,CAAA,EAAG;EAC7B,IAAAC,SAAA,GAAwBX,QAAQ,CAAY,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,IAAAI,UAAA,GAAwBhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpBlB,SAAS,CAAC,YAAM;IACdqB,KAAK,CAAC,+BAA+B,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAC,CAAC,CACtDC,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACR,IAAI;MAAA,OAAKC,OAAO,CAACD,IAAI,CAACW,QAAQ,CAAC;IAAA,EAAC,CACtCC,KAAK,CAAC,UAACC,KAAK;MAAA,OAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IAAA,EAAC;IACzCC,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,OACEL,KAAA,CAACN,YAAY;IAAC2B,KAAK,EAAE7B,MAAM,CAAC8B,GAAI;IAAAC,QAAA,GAC9BzB,IAAA,CAACH,SAAS;MACR0B,KAAK,EAAE7B,MAAM,CAACgC,MAAO;MACrBC,YAAY,EAAEf,OAAQ;MACtBgB,KAAK,EAAEjB,IAAK;MACZkB,WAAW,EAAC;IAAW,CACxB,CAAC,EACF7B,IAAA,CAACL,QAAQ;MACP4B,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,IAAI,EAAE;MAA8B,CAAE;MAChExB,IAAI,EACFI,IAAI,KAAK,EAAE,GACPJ,IAAI,GACJA,IAAI,CAACyB,MAAM,CAAC,UAACC,CAAC;QAAA,OAAKA,CAAC,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACvB,IAAI,CAACwB,WAAW,CAAC,CAAC,CAAC;MAAA,EACzD;MACDC,YAAY,EAAE,SAAAA,aAACC,CAAC,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC7CC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGC,IAAI,GAAAD,IAAA,CAAJC,IAAI;QAAA,OACjB1C,IAAA,CAACF,WAAW;UACV4C,IAAI,EAAE;YACJC,EAAE,EAAED,IAAI,CAAC,CAAC,CAAC;YACXE,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;YACbG,KAAK,EAAEH,IAAI,CAAC,CAAC;UACf;QAAE,CACH,CAAC;MAAA;IACF,CACH,CAAC;EAAA,CACU,CAAC;AAEnB;AAEA,eAAevC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}